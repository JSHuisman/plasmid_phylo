theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_dodge(width = 0.05), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_dodge(width = 0.05), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.5), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_dodge(width = 0.5), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_dodge(width = 2), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_dodge(width = 1), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(width = 1), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_pars_pvalue_df
ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(), alpha = 1, size = 6, stroke = 3)
ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1)
# Violin-PLOT
res_pars_pvalue_df <- pars_pvalue_df %>%
separate(method, into = c('seq_method', 'align_method'), sep = '_', extra = 'drop', remove = F) %>%
mutate(tree_recode = recode(tree,
"cgMLST" = "Canu", #"Illumina",
"IncI1" = "SPAdes", #"NP",
"IncFIA" = "Unicycler", #"PB",
"IncFII_pRSB107" = "Other"))
res_pars_pvalue_df
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
res_pars_pvalue_df %>%
filter(gene == 'blaCTX.M.15')
res_pars_pvalue_df %>%
filter(gene == 'blaCTX.M.27',
tree == 'IncFIA')
?separate
# Violin-PLOT
res_pars_pvalue_df <- pars_pvalue_df %>%
separate(method, into = c('seq_method', 'align_method'), sep = '_', extra = 'merge', remove = F) %>%
mutate(tree_recode = recode(tree,
"cgMLST" = "Canu", #"Illumina",
"IncI1" = "SPAdes", #"NP",
"IncFIA" = "Unicycler", #"PB",
"IncFII_pRSB107" = "Other"))
res_pars_pvalue_df
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
# Violin-PLOT
res_pars_pvalue_df <- pars_pvalue_df %>%
separate(method, into = c('seq_method', 'align_method'), sep = '_', extra = 'merge', remove = F) %>%
mutate(tree_recode = recode(tree,
"cgMLST" = "Canu", #"Illumina",
"IncI1" = "SPAdes", #"NP",
"IncFIA" = "Unicycler", #"PB",
"IncFII_pRSB107" = "Canu_Hybrid_Polished"))
res_pars_pvalue_df %>%
filter(gene == 'blaCTX.M.27',
tree == 'IncFIA')
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, position = position_jitterdodge(), alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
plas_pars_pvalue_df <- compute_pars_pvalue_df(pars_dfs, plasmids_to_keep$name, methods)  %>%
separate(method, into = c('seq_method', 'align_method'), sep = '_', extra = 'merge', remove = F)
plasmid_plot <- ggplot(data=plas_pars_pvalue_df, aes(y = p_value, x = gene) ) +
geom_boxplot() +
#geom_point(aes(y = p_value, colour = method), show.legend = TRUE, alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, alpha = 1, size = 6, stroke = 3) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
scale_colour_manual(values = c('red', 'black', 'grey')) +
scale_fill_manual(values = c('red', 'black', 'grey')) +
#coord_flip() +
facet_wrap(vars(gene), nrow = 1, scales = 'free_x',
labeller = labeller(gene = c("Col_MG828" = "ColMG828",
"Col156"="Col156", "ColRNAI"="ColRNAI",
"IncFIA" ="IncFIA", "IncFIB_AP001918" = "IncFIB",
"IncFIC_FII"="IncFIC_FII",
"IncFII_pRSB107"= "IncFII", "IncI1"="IncI1") )) +
labs(x = 'Plasmid', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method') +
theme_classic() +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 17),
legend.title = element_text(size = 20),
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20)) +
guides(colour = guide_legend(nrow = 1, override.aes=list(size = 5) ),
fill = guide_legend(nrow = 1, override.aes=list(colour = NA, stroke = 2) ))
plasmid_plot
plasmid_plot <- ggplot(data=plas_pars_pvalue_df, aes(y = p_value, x = gene) ) +
geom_boxplot() +
#geom_point(aes(y = p_value, colour = method), show.legend = TRUE, alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, alpha = 1, size = 6, stroke = 3) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
scale_colour_manual(values = c('red', 'black', 'grey', 'white')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
#coord_flip() +
facet_wrap(vars(gene), nrow = 1, scales = 'free_x',
labeller = labeller(gene = c("Col_MG828" = "ColMG828",
"Col156"="Col156", "ColRNAI"="ColRNAI",
"IncFIA" ="IncFIA", "IncFIB_AP001918" = "IncFIB",
"IncFIC_FII"="IncFIC_FII",
"IncFII_pRSB107"= "IncFII", "IncI1"="IncI1") )) +
labs(x = 'Plasmid', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method') +
theme_classic() +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 17),
legend.title = element_text(size = 20),
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20)) +
guides(colour = guide_legend(nrow = 1, override.aes=list(size = 5) ),
fill = guide_legend(nrow = 1, override.aes=list(colour = NA, stroke = 2) ))
plasmid_plot
plasmid_plot + res_plot +
plot_layout(ncol = 1) + #heights=c(1, 1), guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 30))
res_plot <- ggplot(data=res_pars_pvalue_df, aes(y = p_value, x = tree,
group = interaction(gene, tree))) +
geom_violin(aes(fill = tree_recode), scale = 'width', width = 0.5, show.legend = F) +
#geom_point(aes(colour = method, group = tree), position=position_dodge(width=0.5),
#           alpha = 1, size = 2) +
geom_point(aes(colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, alpha = 1, size = 6, stroke = 3) +
facet_wrap(vars(gene), nrow = 1) +
scale_colour_manual(values = c('red', 'black', 'grey', 'transparent')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
theme_classic() +
labs(x = 'Resistance gene', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method', shape = 'Tree') +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'none',
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20))
res_plot
plasmid_plot + res_plot +
plot_layout(ncol = 1) + #heights=c(1, 1), guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 30))
ggsave("/Users/jana/Documents/PhD/Plasmid_Bioinfo_Paper/figures/Pval_plot.pdf",
height = 15, width = 17)
plasmid_plot <- ggplot(data=plas_pars_pvalue_df, aes(y = p_value, x = gene) ) +
geom_boxplot() +
#geom_point(aes(y = p_value, colour = method), show.legend = TRUE, alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, alpha = 1, size = 6, stroke = 3) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
scale_colour_manual(values = c('red', 'black', 'grey', 'white')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
#coord_flip() +
facet_wrap(vars(gene), nrow = 1, scales = 'free_x',
labeller = labeller(gene = c("Col_MG828" = "ColMG828",
"Col156"="Col156", "ColRNAI"="ColRNAI",
"IncFIA" ="IncFIA", "IncFIB_AP001918" = "IncFIB",
"IncFIC_FII"="IncFIC_FII",
"IncFII_pRSB107"= "IncFII", "IncI1"="IncI1") )) +
labs(x = 'Plasmid', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method') +
theme_classic() +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 22),
legend.title = element_text(size = 25),
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20)) +
guides(colour = guide_legend(nrow = 1, override.aes=list(size = 5) ),
fill = guide_legend(nrow = 1, override.aes=list(colour = NA, stroke = 2) ))
plasmid_plot
plasmid_plot + res_plot +
plot_layout(ncol = 1) + #heights=c(1, 1), guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 30))
ggsave("/Users/jana/Documents/PhD/Plasmid_Bioinfo_Paper/figures/Pval_plot.pdf",
height = 15, width = 17)
plasmid_plot <- ggplot(data=plas_pars_pvalue_df, aes(y = p_value, x = gene) ) +
geom_boxplot() +
#geom_point(aes(y = p_value, colour = method), show.legend = TRUE, alpha = 1, size = 2) +
geom_point(aes(y = p_value, colour = seq_method, fill = align_method), shape = 21,
show.legend = TRUE, alpha = 1, size = 6, stroke = 3) +
geom_hline(mapping = aes(yintercept = 0.05), size = 1) +
#scale_colour_discrete(labels = method_labels) +
scale_colour_manual(values = c('red', 'black', 'grey', 'white')) +
scale_fill_manual(values = c('red', 'black', 'grey', 'white')) +
#coord_flip() +
facet_wrap(vars(gene), nrow = 1, scales = 'free_x',
labeller = labeller(gene = c("Col_MG828" = "ColMG828",
"Col156"="Col156", "ColRNAI"="ColRNAI",
"IncFIA" ="IncFIA", "IncFIB_AP001918" = "IncFIB",
"IncFIC_FII"="IncFIC_FII",
"IncFII_pRSB107"= "IncFII", "IncI1"="IncI1") )) +
labs(x = 'Plasmid', y = 'P-value', colour = 'Sequencing method',
fill = 'Assembly method') +
theme_classic() +
theme(axis.text= element_text(size=20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=24, face="bold"),
axis.title.x = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 22),
legend.title = element_text(size = 25),
panel.grid = element_blank(),
panel.spacing = unit(2, "lines"),
strip.background = element_blank(),
strip.text = element_text(size=20)) +
guides(colour = guide_legend(nrow = 2, override.aes=list(size = 5) ),
fill = guide_legend(nrow = 2, override.aes=list(colour = NA, stroke = 2) ))
plasmid_plot
plasmid_plot + res_plot +
plot_layout(ncol = 1) + #heights=c(1, 1), guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 30))
ggsave("/Users/jana/Documents/PhD/Plasmid_Bioinfo_Paper/figures/Pval_plot.pdf",
height = 15, width = 17)
??findGroves
